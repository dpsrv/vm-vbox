#!/bin/bash -ex

echo 'DNSStubListener=no' >> /etc/systemd/resolved.conf
systemctl restart systemd-resolved

dnf install -y dnf-plugins-core iptables-services ipset policycoreutils-python-utils setools-console setroubleshoot-server bind-utils nc git bzip2 tcpdump cronie fail2ban tmux
dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo
dnf install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

systemctl --now enable iptables.service ip6tables.service
systemctl --now enable fail2ban
systemctl --now enable docker

HCLOUD_VOLUME_DATA=HC_Volume_${hcloud_volume_data_id}

if [ ! -e /mnt/data ] && [ -d /mnt/\$HCLOUD_VOLUME_DATA ]; then
	ln -s /mnt/\$HCLOUD_VOLUME_DATA /mnt/data
fi

for user in dpsrv ezsso; do
	useradd -G docker $user

	[ -d /home/$user/.ssh ] || mkdir /home/$user/.ssh

	echo "${hcloud_ssh_key_dpsrv}" >> /home/$user/.ssh/authorized_keys

	chown -R $user:$user /home/$user/.ssh
	chmod -R og-rwx /home/$user/.ssh

	[ -d /home/$user/.bashrc.d ] || mkdir /home/$user/.bashrc.d
	echo ". /mnt/data/dpsrv/rc/bin/dpsrv.sh" > /home/$user/.bashrc.d/dpsrv
	[ $user = dpsrv ] || echo ". /mnt/data/$user/rc/bin/$user.sh" > /home/$user/.bashrc.d/$user
done

cat >> /usr/local/bin/dpsrv-init-projects.sh << _EOT_
#!/bin/bash -ex
user=\$1

pushd /mnt/data/\$user
git clone https://github.com/maxfortun/git-openssl-secrets.git
pushd git-openssl-secrets
ln -s git-setenv-openssl-secrets-fs.sh git-setenv-openssl-secrets.sh
popd >/dev/null
git clone https://github.com/\$user/rc.git
. rc/bin/\$user.sh
\$user-git-clone
\$user-git-init-secrets 

\$user-up

_EOT_

cat >> /usr/local/bin/dpsrv-init.sh << _EOT_
#!/bin/bash -ex
resolved=\$(host "\$(hostname -s).dpsrv.me")
if floating_ip=\$(echo "\$resolved"|awk '{ print \$4 }'); then

	if ! ip a s | grep -q \$floating_ip; then
		ip addr add \$floating_ip dev eth0
	fi

fi

sysctl -w net.ipv4.conf.all.route_localnet=1
#iptables -t nat -A POSTROUTING -m addrtype --src-type LOCAL --dst-type UNICAST -j MASQUERADE -m comment --comment dpsrv:forward:port

while [ -f ~/.config/openssl-salt ]; do
	echo "Waiting for ~/.config"
	sleep 2
done

export HOME=\$\{HOME:-/root}

docker network ls | grep -q '^[^ ]*[ ]*dpsrv' || docker network create dpsrv

for user in dpsrv ezsso; do
	[ ! -d /mnt/data/\$user ] || continue
	mkdir -p /mnt/data/\$user
	cp -r ~root/{.config,.gitconfig,.git-credentials} /home/\$user/

	chown -R \$user:\$user /home/\$user/{.config,.gitconfig,.git-credentials} /mnt/data/\$user

	sudo -u \$user git config --global credential.helper store
	sudo -u \$user git config --global --add safe.directory /root/dpsrv/rc

	sudo -u \$user /usr/local/bin/dpsrv-init-projects.sh \$user
done

. /mnt/data/dpsrv/rc/bin/dpsrv.sh
dpsrv-activate-latest

bridgeIP=\$(docker network inspect --format '{{(index .IPAM.Config 0).Gateway}}' dpsrv)
bridgeLabel=\$(ip -json address show to "\$bridgeIP/32"|jq -r '.[].addr_info[].label')
ifconfig \$bridgeLabel promisc

_EOT_

chmod a+x /usr/local/bin/dpsrv-init*.sh

cat >> /usr/lib/systemd/system/dpsrv-init.service << _EOT_
[Unit]
Description=DPSRV init
Requires=multi-user.target
After=multi-user.target

[Service]
Type=simple
ExecStart=/usr/local/bin/dpsrv-init.sh

[Install]
WantedBy=multi-user.target 

_EOT_

cat >> /etc/sudoers.d/dpsrv << _EOT_
dpsrv ALL=(ALL) NOPASSWD:/sbin/iptables,/sbin/ip6tables,/sbin/iptables-save,/sbin/ip6tables-save,/usr/bin/tee /etc/sysconfig/iptables,/usr/bin/tee /etc/sysconfig/ip6tables
_EOT_

cat >> /etc/sudoers.d/ezsso << _EOT_
ezsso ALL=(ALL) NOPASSWD:/sbin/iptables,/sbin/ip6tables,/sbin/iptables-save,/sbin/ip6tables-save,/usr/bin/tee /etc/sysconfig/iptables,/usr/bin/tee /etc/sysconfig/ip6tables
_EOT_

cat >> /etc/yum.repos.d/mongodb.repo << _EOT_
[mongodb]
name=MongoDB
baseurl=https://repo.mongodb.org/yum/redhat/9/mongodb-org/7.0/\$\{basearch}/
gpgkey=https://www.mongodb.org/static/pgp/server-7.0.asc
_EOT_

rpm --import https://www.mongodb.org/static/pgp/server-7.0.asc
dnf install -y mongodb-mongosh-shared-openssl3

systemctl --now enable dpsrv-init


