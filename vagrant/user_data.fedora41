#!/bin/bash -ex

DPSRV_LOCAL=/etc/dpsrv
if ! mkdir -p $DPSRV_LOCAL; then
	echo "$DPSRV_LOCAL already exists. Skipping init."
	exit 0
fi

# Claim remainder of the disk
fdisk /dev/sda <<_EOT_
n



w
_EOT_
mkfs -t ext4 /dev/sda5
systemctl daemon-reload
mkdir -p /mnt/docker-data
mount /dev/sda5 /mnt/docker-data

while IFS=: read DEVICE CONNECTION; do
	IP_VAR=NM_C_${DEVICE}_IP
	IP=${!IP_VAR}

	GW_VAR=NM_C_${DEVICE}_GW
	GW=${!GW_VAR}

	[ -n "$IP" ] && [ -n "$GW" ] || continue

	nmcli d mod "$DEVICE" \
		ipv4.addresses $IP/24 \
		ipv4.gateway $GW \
		ipv4.route-metric 99 \
		ipv4.method manual \
		connection.autoconnect yes

	nmcli c mod "$CONNECTION" \
		ipv4.addresses $IP/24\
		ipv4.gateway $GW \
		ipv4.route-metric 99 \
		ipv4.method manual \
		connection.autoconnect yes

	if [ "$DEVICE" = "$NM_C_DEFAULT_GW" ]; then
		export NM_C_DEFAULT_GW_SET=true
	fi
done < <(nmcli -t -f device,name c s)

if [ "$NM_C_DEFAULT_GW_SET" = "true" ]; then
	ip r s
	while IFS=: read DEVICE CONNECTION; do
		nmcli c mod "$CONNECTION" ipv4.never-default yes ipv6.never-default yes
	done < <(nmcli -t -f device,name c s | grep -v "^$NM_C_DEFAULT_GW:")
	ip r s
fi

# Escape spaces in fstab or root will be mounted ro
sed -i 's/\\ /\\040/g' /etc/fstab

cat >> /etc/profile.d/dpsrv.sh << _EOT_
export DPSRV_REGION=${DPSRV_REGION}
export DPSRV_NODE=${DPSRV_NODE}
_EOT_

dnf install -y git

cp -r /home/host_user/{.config,.gitconfig,.git-credentials} /root/

mkdir -p /opt/dpsrv
cd /opt/dpsrv
git clone https://github.com/dpsrv/cloud-init.git

. /etc/os-release
DPSRV_CLOUD_INIT_D=$PWD/cloud-init/$ID/$VERSION_ID

[ ! -x $DPSRV_CLOUD_INIT_D/cloud-init.sh ] || $DPSRV_CLOUD_INIT_D/cloud-init.sh
usermod -a -G docker vagrant

